version: '3.8'

services:

  ui:
     build: 
       context: ./UI
       dockerfile: Dockerfile
     ports:
       - "3000:3000"

  cheshire-cat-core:
    image: ghcr.io/cheshire-cat-ai/core:latest
    container_name: cheshire_cat_core
    ports:
      - 1865:80
      - 5678:5678
    volumes:
    ## a sx sono i path sono quelli 
      - ./AI/stregatto/static:/app/cat/static
      - ./AI/stregatto/plugins:/app/cat/plugins
      - ./AI/stregatto/data:/app/cat/data
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    # -------- Both of the following commands should be commented to run with nginx --------
    container_name: web_be_1
    # -------- replace with comment to run with gunicorn --------
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # command: gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000
    env_file:
      - ./BE/src/.env
    # -------- replace with expose if you are using nginx --------
    ports:
       - "8000:8000"
    # expose:
    #    - "8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./BE/src/app:/code/app
      - ./BE/src/.env:/code/.env

  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: arq app.core.worker.settings.WorkerSettings
    env_file:
      - ./BE/src/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./BE/src/app:/code/app
      - ./BE/src/.env:/code/.env

  db:
    image: postgres:13
    container_name: db_1
    env_file:
      - ./BE/src/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"

  mongo:
    image: "mongo:7.0"
    container_name: mongo_1
    ports:
      - 27017:27017
    env_file:
      - ./BE/src/.env
    volumes:
      - mongo_data:/data/db
      - ./BE/src/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js  # Load initial data from this file

  pgadmin:
    container_name: pgadmin_1
    image: dpage/pgadmin4
    env_file:
      - ./BE/src/.env
    ports:
      - "5050:80"
    depends_on:
      - db

  redis:
    image: redis:alpine
    container_name: redis_1
    volumes:
      - redis_data:/data
    expose:
      - "6379"

  #-------- uncomment to run with nginx --------
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - web

  #-------- uncomment to create first superuser --------
  create_superuser:
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./BE/src/.env
    depends_on:
      - db
      - web
    command: python -m src.scripts.create_first_superuser
    volumes:
      - ./BE/src:/code/src

  #-------- uncomment to run tests --------
  pytest:
    build: 
      context: .
      dockerfile: Dockerfile 
    env_file:
      - ./BE/src/.env
    depends_on:
      - db
      - create_superuser
      - redis
    command: python -m pytest ./tests
    volumes:
      - ./BE:/code

  #-------- uncomment to create first tier --------
  # create_tier:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./src/.env
  #   depends_on:
  #     - create_superuser
  #     - db
  #     - web
  #   command: python -m src.scripts.create_first_tier
  #   volumes:
  #     - ./src:/code/src

volumes:
  postgres_data:
  redis_data:
  mongo_data: